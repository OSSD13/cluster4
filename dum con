<?php

    namespace App\Http\Controllers;

    use App\Models\User;
    use App\Models\Order;
    use Illuminate\Http\Request;
    use App\Models\Branch;
    use Illuminate\Support\Facades\DB;
    use Carbon\Carbon;

    class OrderController extends Controller
    {

        public function order_detail($br_id)
        {
            $branch = Branch::with('order', 'manager')->where('br_id', $br_id)->first();

            if (!$branch) {
                return redirect()->back()->with('error', 'ไม่พบข้อมูลสาขานี้');
            }

            // รวมยอดขายทั้งปี
            $totalSales = $branch->order()
                ->whereYear('created_at', date('Y'))
                ->sum('od_amount');

            // ยอดขายรายเดือน
            $monthlySales = $branch->order()
                ->selectRaw('MONTH(created_at) as month, SUM(od_amount) as total')
                ->whereYear('created_at', date('Y'))
                ->groupBy(DB::raw('MONTH(created_at)'))
                ->pluck('total', 'month')
                ->toArray();

            // ข้อมูล 12 เดือน
            $growthRates = [];
            for ($i = 1; $i <= 12; $i++) {
                $growthRates[Carbon::create()->month($i)->locale('th')->translatedFormat('F')] = $monthlySales[$i] ?? 0;
            }

            return view('orderDetail', compact('branch', 'totalSales', 'growthRates'));
        }

        function index()
        {
            $orders = User::join('branch as b', 'users.us_id', '=', 'b.br_us_id') // ดึงข้อมูลผู้ใช้ทั้งหมด
                ->join('order as o', 'b.br_id', '=', 'o.od_br_id')
                ->select('b.br_id', 'b.br_code', 'users.us_image', 'users.us_email', 'o.od_amount')
                ->get();
            return view('order', compact('orders'));
        }

        function add_order()
        {
            return view('addOrder');
        }

        public function editOrder($od_id){
        $sale = Order::find($od_id);
        $sales = Order::all();
        $users = User::all();
        $sales = Order::with('branch')->get();
        $user = User::where('us_id', $sale->od_us_id)->first();

            foreach ($sales as $s) {
            $s->thai_month = $s->od_month;
            $s->thai_year = $s->od_year;
    }

         return view('editOrder', compact('sale', 'sales', 'user', 'users'));
}

        function edit($od_id) {
            $order = Order::find($od_id);

            if (!$order) {
                return redirect()->route('edit.order', ['od_id' => $od_id]);
            }
            $users = User::all();

            return view('editOrder', compact('order', 'users'));
        }

        public function update(Request $request) {
            $validated = $request->validate([
                'od_month' => 'required',
            ]);

            $order = Order::find($request->id);

            if (!$order) {
                return redirect()->route('order');
            }

            if ($request->action === 'delete') {
                $order->delete();
                return redirect()->route('order');
            }

            $order->od_amount = $request->od_amount;
            $order->od_month = $request->od_month;
            $order->od_year = $request->od_year;
            $order->od_br_id = $request->od_br_id;
            $order->od_us_id = $request->od_us_id;
            $order->save();

            return redirect()->route('edit.order', ['od_id' => $order->od_id]);
        }
    }
